%clear all; close all;

%addpath 'labFilter/'

fprintf('[!] filterOnly: filters data and drops off .mat files\n')

DATA_PATH = './';
OUT_PATH = './';
diagDir = 'preprocessing_output';

% Retrieve info about directory generated by peter.py
summary = textscan(fopen('peter_summary'),'%s');
filelist = textscan(fopen('peter_filelist'),'%s');
%N_SAMPLES = str2double(summary{1}{2});
N_CHAN = str2double(summary{1}{4});
Fs = round(str2double(summary{1}{6}));
files = filelist{1};

% Make diagnostic directory if does not already exist
fprintf('[*] Making output directory... (ignore warning if exists)\n')
mkdir(diagDir);
system(['rm ',diagDir,'/*.png']);

parfor i = 1:length(files)

    % Open files
    infile1 = strcat(DATA_PATH,[files{i} '.csv']);
    fprintf(strcat('[*] mainfilter: ',infile1,'\n'))
    data1 = csvread(infile1);
    data_before = data1; % save before data for psd plotting
    %fprintf('\tfile opened. Filtering...\n')

    % Constants
    SAMPLE_RATE = Fs; % 1/sec
    % Warning: need at least 500 msec for filtering
    %TIME_START = 0; % msec (minimum 0)
    USE_LAB_FILTER = 1; % 1 to use in-house script from Leyla/Bill

    % Precalculations
    [timax,~] = size(data1);
    t = data1(:,1);
    t_ind = 1:timax;
    N = length(data1(1,2:end));% the number of electrodes

    % Compute once to get definite matrix sizes and time vector
    e1 = 1;
    V1 = data1(t_ind,e1+1);
    [t1f, ~] = filterMaster(V1, t, USE_LAB_FILTER, SAMPLE_RATE);
    data = zeros(length(t1f),N+1);
    data(:,1) = t1f;

    %fprintf('\t\tprogress(pct): 0')
    for e1 = 1:N
        V1 = data1(t_ind,e1+1);

        % Filter
        [~, V1f] = filterMaster(V1, t, USE_LAB_FILTER, SAMPLE_RATE);
        data(:,e1+1) = V1f;

        %if (mod(e1,10) == 0)
        %    fprintf(strcat('..',num2str(round(100*e1/N))))
        %end

    end
    %fprintf('\n')

    %----------------------------------------------------------------------
    % CAR filtering
    %----------------------------------------------------------------------
    %fprintf('\tBegin CAR filtering...\n')
    %data1 = data;

    % Compute once to get definite matrix sizes and time vector
    %e1 = 1;
    %V1 = data1(t_ind,e1+1);
    %[t1f, ~] = filterMaster(V1, t, USE_LAB_FILTER, SAMPLE_RATE);
    %data = zeros(length(t1f),N+1);
    %data(:,1) = t1f;

    % compute common average
    %cavg = mean(data1(:,2:end),2);

    %fprintf('\t\tprogress(pct): 0')
    %for e1 = 1:N
    %    V1 = data1(t_ind,e1+1);

        % CAR filter
    %    data(:,e1+1) = V1 - cavg;

        % produce progress update
    %    if (mod(e1,10) == 0)
    %        fprintf(strcat('..',num2str(round(100*e1/N))))
    %    end

    %end
    %fprintf('\n')

    % plot power spectrum for diagnostics for a random subset of electrodes
    if (i == 1)
        n_plot = randperm(N_CHAN-1);
        %n_plot = n_plot(1:round(0.1*(N_CHAN-1)));% select a fraction to plot
        n_plot = n_plot(1:20); % always check 20 PSD spectrums
        for eplot = 1:length(n_plot)
            j = n_plot(eplot);
            makeSpectralPlot(data(:,1), data(:,(j+1)), data_before(:,(j+1)), j, Fs, ['_' files{i}], diagDir);
            close all;
        end
    end
    
    %----------------------------------------------------------------------
    % Save data
    %----------------------------------------------------------------------
    %fprintf('\tsaving...\n')
    %save(strcat(OUT_PATH,files{i}),'data');
    mainfilter_save(strcat(OUT_PATH,files{i}), data);

end

fprintf('[!] Done.\n')

exit()
